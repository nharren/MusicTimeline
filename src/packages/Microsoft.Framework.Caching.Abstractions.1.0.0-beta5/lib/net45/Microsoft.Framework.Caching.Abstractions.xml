<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Framework.Caching.Abstractions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Framework.Caching.Memory.CacheItemPriority">
            <summary>
            Specifies how items are prioritized for preservation during a memory pressure triggered cleanup.
            </summary>
        </member>
        <member name="F:Microsoft.Framework.Caching.Memory.EvictionReason.Removed">
            <summary>
            Manually
            </summary>
        </member>
        <member name="F:Microsoft.Framework.Caching.Memory.EvictionReason.Replaced">
            <summary>
            Overwritten
            </summary>
        </member>
        <member name="F:Microsoft.Framework.Caching.Memory.EvictionReason.Expired">
            <summary>
            Timed out
            </summary>
        </member>
        <member name="F:Microsoft.Framework.Caching.Memory.EvictionReason.Triggered">
            <summary>
            Event
            </summary>
        </member>
        <member name="F:Microsoft.Framework.Caching.Memory.EvictionReason.Capacity">
            <summary>
            GC, overflow
            </summary>
        </member>
        <member name="T:Microsoft.Framework.Caching.Memory.IEntryLink">
            <summary>
            Used to flow expiration information from one entry to another. Triggers and minimum absolute expiration will
            be copied from the dependent entry to the parent entry. The parent entry will not expire if the
            dependent entry is removed manually, removed due to memory pressure, or expires due to sliding expiration.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.Caching.Memory.IEntryLink.AbsoluteExpiration">
            <summary>
            Gets the minimum absolute expiration for all dependent entries, or null if not set.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.Caching.Memory.IEntryLink.Triggers">
            <summary>
            Gets all the triggers from the dependent entries.
            </summary>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.IEntryLink.AddExpirationTriggers(System.Collections.Generic.IList{Microsoft.Framework.Caching.IExpirationTrigger})">
            <summary>
            Adds triggers from a dependent entries.
            </summary>
            <param name="triggers"></param>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.IEntryLink.SetAbsoluteExpiration(System.DateTimeOffset)">
            <summary>
            Sets the absolute expiration for from a dependent entry. The minimum value across all dependent entries
            will be used.
            </summary>
            <param name="absoluteExpiration"></param>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.IMemoryCache.CreateLinkingScope">
            <summary>
            Creates an entry link scope.
            </summary>
            <returns>The <see cref="T:Microsoft.Framework.Caching.Memory.IEntryLink"/>.</returns>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.IMemoryCache.Set(System.String,System.Object,Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions)">
            <summary>
            Create or overwrite an entry in the cache.
            </summary>
            <param name="key">A string identifying the entry. This is case sensitive.</param>
            <param name="value">The value to be cached.</param>
            <param name="options">The <see cref="T:Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions"/>.</param>
            <returns>The object that was cached.</returns>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.IMemoryCache.TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the item associated with this key if present.
            </summary>
            <param name="key">A string identifying the requested entry.</param>
            <param name="value">The located value or null.</param>
            <returns>True if the key was found.</returns>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.IMemoryCache.Remove(System.String)">
            <summary>
            Removes the object associated with the given key.
            </summary>
            <param name="key">A string identifying the entry. This is case sensitive.</param>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.MemoryCacheEntryExtensions.SetPriority(Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Framework.Caching.Memory.CacheItemPriority)">
            <summary>
            Sets the priority for keeping the cache entry in the cache during a memory pressure triggered cleanup.
            </summary>
            <param name="options"></param>
            <param name="priority"></param>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.MemoryCacheEntryExtensions.AddExpirationTrigger(Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Framework.Caching.IExpirationTrigger)">
            <summary>
            Expire the cache entry if the given event occurs.
            </summary>
            <param name="options"></param>
            <param name="trigger"></param>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)">
            <summary>
            Sets an absolute expiration time, relative to now.
            </summary>
            <param name="options"></param>
            <param name="relative"></param>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.MemoryCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions,System.DateTimeOffset)">
            <summary>
            Sets an absolute expiration date for the cache entry.
            </summary>
            <param name="options"></param>
            <param name="absolute"></param>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.MemoryCacheEntryExtensions.SetSlidingExpiration(Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions,System.TimeSpan)">
            <summary>
            Sets how long the cache entry can be inactive (e.g. not accessed) before it will be removed.
            This will not extend the entry lifetime beyond the absolute expiration (if set).
            </summary>
            <param name="options"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Framework.Caching.Memory.PostEvictionDelegate)">
            <summary>
            The given callback will be fired after the cache entry is evicted from the cache.
            </summary>
            <param name="options"></param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.MemoryCacheEntryExtensions.RegisterPostEvictionCallback(Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Framework.Caching.Memory.PostEvictionDelegate,System.Object)">
            <summary>
            The given callback will be fired after the cache entry is evicted from the cache.
            </summary>
            <param name="options"></param>
            <param name="callback"></param>
            <param name="state"></param>
        </member>
        <member name="M:Microsoft.Framework.Caching.Memory.MemoryCacheEntryExtensions.AddEntryLink(Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions,Microsoft.Framework.Caching.Memory.IEntryLink)">
            <summary>
            Adds inherited trigger and absolute expiration information.
            </summary>
            <param name="link"></param>
        </member>
        <member name="P:Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions.AbsoluteExpiration">
            <summary>
            Gets or sets an absolute expiration date for the cache entry.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions.AbsoluteExpirationRelativeToNow">
            <summary>
            Gets or sets an absolute expiration time, relative to now.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions.SlidingExpiration">
            <summary>
            Gets or sets how long a cache entry can be inactive (e.g. not accessed) before it will be removed.
            This will not extend the entry lifetime beyond the absolute expiration (if set).
            </summary>
        </member>
        <member name="P:Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions.Triggers">
            <summary>
            Gets or sets the events which are fired when the cache entry expires.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions.PostEvictionCallbacks">
            <summary>
            Gets or sets the callbacks will be fired after the cache entry is evicted from the cache.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.Caching.Memory.MemoryCacheEntryOptions.Priority">
            <summary>
            Gets or sets the priority for keeping the cache entry in the cache during a
            memory pressure triggered cleanup. The default is <see cref="F:Microsoft.Framework.Caching.Memory.CacheItemPriority.Normal"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Framework.Caching.Memory.PostEvictionDelegate">
            <summary>
            Signature of the callback which gets called when a cache entry expires.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="reason">The <see cref="T:Microsoft.Framework.Caching.Memory.EvictionReason"/>.</param>
            <param name="state">The information that was passed when registering the callback.</param>
        </member>
        <member name="M:Microsoft.Framework.Caching.Distributed.DistributedCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Framework.Caching.Distributed.DistributedCacheEntryOptions,System.TimeSpan)">
            <summary>
            Sets an absolute expiration time, relative to now.
            </summary>
            <param name="options"></param>
            <param name="relative"></param>
        </member>
        <member name="M:Microsoft.Framework.Caching.Distributed.DistributedCacheEntryExtensions.SetAbsoluteExpiration(Microsoft.Framework.Caching.Distributed.DistributedCacheEntryOptions,System.DateTimeOffset)">
            <summary>
            Sets an absolute expiration date for the cache entry.
            </summary>
            <param name="options"></param>
            <param name="absolute"></param>
        </member>
        <member name="M:Microsoft.Framework.Caching.Distributed.DistributedCacheEntryExtensions.SetSlidingExpiration(Microsoft.Framework.Caching.Distributed.DistributedCacheEntryOptions,System.TimeSpan)">
            <summary>
            Sets how long the cache entry can be inactive (e.g. not accessed) before it will be removed.
            This will not extend the entry lifetime beyond the absolute expiration (if set).
            </summary>
            <param name="options"></param>
            <param name="offset"></param>
        </member>
        <member name="P:Microsoft.Framework.Caching.Distributed.DistributedCacheEntryOptions.AbsoluteExpiration">
            <summary>
            Gets or sets an absolute expiration date for the cache entry.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.Caching.Distributed.DistributedCacheEntryOptions.AbsoluteExpirationRelativeToNow">
            <summary>
            Gets or sets an absolute expiration time, relative to now.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.Caching.Distributed.DistributedCacheEntryOptions.SlidingExpiration">
            <summary>
            Gets or sets how long a cache entry can be inactive (e.g. not accessed) before it will be removed.
            This will not extend the entry lifetime beyond the absolute expiration (if set).
            </summary>
        </member>
        <member name="P:Microsoft.Framework.Caching.IExpirationTrigger.IsExpired">
            <summary>
            Checked each time the key is accessed in the cache.
            </summary>
        </member>
        <member name="P:Microsoft.Framework.Caching.IExpirationTrigger.ActiveExpirationCallbacks">
            <summary>
            Indicates if this trigger will pro-actively trigger callbacks. Callbacks are still guaranteed to fire, eventually.
            </summary>
        </member>
        <member name="M:Microsoft.Framework.Caching.IExpirationTrigger.RegisterExpirationCallback(System.Action{System.Object},System.Object)">
            <summary>
            Registers for a callback that will be invoked when the entries should be expired.
            IsExpired MUST be set before the callback is invoked.
            </summary>
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
    </members>
</doc>
